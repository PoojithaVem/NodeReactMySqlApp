Creating Node/expressJs with reactjs,sequalize,mysql2 appln -

create two folders client and server
- cd server
-npm init
-npm install express cors mysql2

create index.js as in package.json

const express = require('express');
const app = express();

app.listen(3002, () => {
    console.log('listening on port 3001');
});

-node index.js

-npm install nodemon

In package.json,
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon index.js"
  },
  
  
-nodemon index.js

Create a schema in mysql workbench

-npm -g install sequelize sequelize-cli
-sequelize init

Delete Migrations and Seeders folder not required

Create Posts.js under models folder -

module.exports =(sequelize, DataTypes) => {
    const Posts = sequelize.define('Posts',{
        title:{
            type:DataTypes.STRING,
            allowNull:false,
        },
        postText:{
            type:DataTypes.STRING,
            allowNull:false,
        },
        username:{
            type:DataTypes.STRING,
            allowNull:false,
        },
    });
    return Posts;
}


index.js

const express = require('express');
const app = express();

app.use(express.json());
const db = require("./models");

//Router
const postRouter = require('./routes/Posts.js');
app.use("/posts", postRouter);


db.sequelize.sync().then(() => {
    app.listen(3001, () => {
        console.log('listening on port 3001');
    });
});


./routes/Posts.js

const express = require('express');
const router = express.Router();

const{Posts} = require('../models');


router.get('/', (req, res) =>{
    res.json("Poojitha");
});

router.post("/", async(req, res) =>{
   const post = req.body;
   await Posts.create(post);
   res.json(post);

});


module.exports = router;


Creating the code for frontend or the client side -

-npm create-react-app .

-npm install axios

-npm install react-router-dom

-npm install yup




